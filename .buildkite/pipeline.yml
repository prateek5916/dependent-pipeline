steps:
  - command: echo 'First Stage'
    label: ':hammer:'
  - wait
  - trigger: dependent-pipeline-example-deploy
    key: "deploy"
    label: ":rocket:"
    branches: "master"
    async: false
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      message: "$BUILDKITE_MESSAGE"

  - block: ":rocket: PROD Release!"
    prompt: You are about to create a new release. This cannot be undone.
    fields:
      - select: "Release type"
        key: "release_type"
        multiple: false
        options:
          - label: "Patch"
            value: "Patch"
          - label: "Minor"
            value: "Minor"
          - label: "Major"
            value: "Major"
          - label: "None (What are you doing here then?)"
            value: "None"
  - wait: ~

  # - label: "Run tests"
  #   key: test
  #   if: build.metadata("release_type", "Patch") == "true"
  #   command: echo "test me!"



  # - label: "Load release type into env variable"
  #   command: |
  #     export release_type=$(buildkite-agent meta-data get release_type)

  - wait: ~

  - label: "Triggering primarily pipeline to build and release"
    #if: "build.env('release_type') != 'None'"
    command: |
      if [ "$(buildkite-agent meta-data get release_type)" == "Patch" ]; then
         .buildkite/scripts/approval.sh
      fi

  # - label: "Cancelled release"
  #   if: "build.env('release_type') == 'None'"
  #   command: echo Cancelled release  



#   - block: "Approval: yes or no"
#     fields:
#       - select: "Approval stage"
#         key: "approval-stage"
#         hint: "Major and minor versions should only be incremented as discussed with your Delivery Lead :fork:"
#         required: true
#         multiple: false
#         options:
#           - label: "Yes"
#             value: "yes"
#           - label: "No"
#             value: "no"
#   - wait: ~

#   - label: "Load release type into env variable"
#     command: |
#       export approval-stage=$(buildkite-agent meta-data get approval-stage)
  
#   - wait: ~

#   - label: "Triggering primarily pipeline to build and release"
#     if: "build.env('approval-stage') == 'yes'"
#     command: |
#       echo Building release of "$approval-stage"

#   - label: "Cancelled release"
#     if: "build.env('approval-stage') == 'no'"
#     command: echo Cancelled release

# #   - label: ":rocket:  inline sh"
# #     command: |
# #       set -eo pipefail
# #       APPROVAL_RESPONSE=$(buildkite-agent meta-data get approval-stage)
# #       echo $APPROVAL_RESPONSE
# #       export APPROVAL_RESPONSE

#   - command: '.buildkite/scripts/approval.sh'
#     label: ":hammer: echo"
